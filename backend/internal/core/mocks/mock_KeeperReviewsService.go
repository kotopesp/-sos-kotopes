// Code generated by mockery v2.43.2. DO NOT EDIT.

package core

import (
	context "context"

	core "github.com/kotopesp/sos-kotopes/internal/core"
	mock "github.com/stretchr/testify/mock"
)

// MockKeeperReviewsService is an autogenerated mock type for the KeeperReviewsService type
type MockKeeperReviewsService struct {
	mock.Mock
}

type MockKeeperReviewsService_Expecter struct {
	mock *mock.Mock
}

func (_m *MockKeeperReviewsService) EXPECT() *MockKeeperReviewsService_Expecter {
	return &MockKeeperReviewsService_Expecter{mock: &_m.Mock}
}

// CreateReview provides a mock function with given fields: ctx, keeperReview
func (_m *MockKeeperReviewsService) CreateReview(ctx context.Context, keeperReview core.KeeperReviews) error {
	ret := _m.Called(ctx, keeperReview)

	if len(ret) == 0 {
		panic("no return value specified for CreateReview")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, core.KeeperReviews) error); ok {
		r0 = rf(ctx, keeperReview)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockKeeperReviewsService_CreateReview_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateReview'
type MockKeeperReviewsService_CreateReview_Call struct {
	*mock.Call
}

// CreateReview is a helper method to define mock.On call
//   - ctx context.Context
//   - keeperReview core.KeeperReviews
func (_e *MockKeeperReviewsService_Expecter) CreateReview(ctx interface{}, keeperReview interface{}) *MockKeeperReviewsService_CreateReview_Call {
	return &MockKeeperReviewsService_CreateReview_Call{Call: _e.mock.On("CreateReview", ctx, keeperReview)}
}

func (_c *MockKeeperReviewsService_CreateReview_Call) Run(run func(ctx context.Context, keeperReview core.KeeperReviews)) *MockKeeperReviewsService_CreateReview_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(core.KeeperReviews))
	})
	return _c
}

func (_c *MockKeeperReviewsService_CreateReview_Call) Return(_a0 error) *MockKeeperReviewsService_CreateReview_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockKeeperReviewsService_CreateReview_Call) RunAndReturn(run func(context.Context, core.KeeperReviews) error) *MockKeeperReviewsService_CreateReview_Call {
	_c.Call.Return(run)
	return _c
}

// GetAllReviews provides a mock function with given fields: ctx, params
func (_m *MockKeeperReviewsService) GetAllReviews(ctx context.Context, params core.GetAllKeeperReviewsParams) ([]core.KeeperReviewsDetails, error) {
	ret := _m.Called(ctx, params)

	if len(ret) == 0 {
		panic("no return value specified for GetAllReviews")
	}

	var r0 []core.KeeperReviewsDetails
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, core.GetAllKeeperReviewsParams) ([]core.KeeperReviewsDetails, error)); ok {
		return rf(ctx, params)
	}
	if rf, ok := ret.Get(0).(func(context.Context, core.GetAllKeeperReviewsParams) []core.KeeperReviewsDetails); ok {
		r0 = rf(ctx, params)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]core.KeeperReviewsDetails)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, core.GetAllKeeperReviewsParams) error); ok {
		r1 = rf(ctx, params)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockKeeperReviewsService_GetAllReviews_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetAllReviews'
type MockKeeperReviewsService_GetAllReviews_Call struct {
	*mock.Call
}

// GetAllReviews is a helper method to define mock.On call
//   - ctx context.Context
//   - params core.GetAllKeeperReviewsParams
func (_e *MockKeeperReviewsService_Expecter) GetAllReviews(ctx interface{}, params interface{}) *MockKeeperReviewsService_GetAllReviews_Call {
	return &MockKeeperReviewsService_GetAllReviews_Call{Call: _e.mock.On("GetAllReviews", ctx, params)}
}

func (_c *MockKeeperReviewsService_GetAllReviews_Call) Run(run func(ctx context.Context, params core.GetAllKeeperReviewsParams)) *MockKeeperReviewsService_GetAllReviews_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(core.GetAllKeeperReviewsParams))
	})
	return _c
}

func (_c *MockKeeperReviewsService_GetAllReviews_Call) Return(_a0 []core.KeeperReviewsDetails, _a1 error) *MockKeeperReviewsService_GetAllReviews_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockKeeperReviewsService_GetAllReviews_Call) RunAndReturn(run func(context.Context, core.GetAllKeeperReviewsParams) ([]core.KeeperReviewsDetails, error)) *MockKeeperReviewsService_GetAllReviews_Call {
	_c.Call.Return(run)
	return _c
}

// SoftDeleteReviewByID provides a mock function with given fields: ctx, id, userID
func (_m *MockKeeperReviewsService) SoftDeleteReviewByID(ctx context.Context, id int, userID int) error {
	ret := _m.Called(ctx, id, userID)

	if len(ret) == 0 {
		panic("no return value specified for SoftDeleteReviewByID")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, int, int) error); ok {
		r0 = rf(ctx, id, userID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockKeeperReviewsService_SoftDeleteReviewByID_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SoftDeleteReviewByID'
type MockKeeperReviewsService_SoftDeleteReviewByID_Call struct {
	*mock.Call
}

// SoftDeleteReviewByID is a helper method to define mock.On call
//   - ctx context.Context
//   - id int
//   - userID int
func (_e *MockKeeperReviewsService_Expecter) SoftDeleteReviewByID(ctx interface{}, id interface{}, userID interface{}) *MockKeeperReviewsService_SoftDeleteReviewByID_Call {
	return &MockKeeperReviewsService_SoftDeleteReviewByID_Call{Call: _e.mock.On("SoftDeleteReviewByID", ctx, id, userID)}
}

func (_c *MockKeeperReviewsService_SoftDeleteReviewByID_Call) Run(run func(ctx context.Context, id int, userID int)) *MockKeeperReviewsService_SoftDeleteReviewByID_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(int), args[2].(int))
	})
	return _c
}

func (_c *MockKeeperReviewsService_SoftDeleteReviewByID_Call) Return(_a0 error) *MockKeeperReviewsService_SoftDeleteReviewByID_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockKeeperReviewsService_SoftDeleteReviewByID_Call) RunAndReturn(run func(context.Context, int, int) error) *MockKeeperReviewsService_SoftDeleteReviewByID_Call {
	_c.Call.Return(run)
	return _c
}

// UpdateReviewByID provides a mock function with given fields: ctx, keeperReview
func (_m *MockKeeperReviewsService) UpdateReviewByID(ctx context.Context, keeperReview core.UpdateKeeperReviews) (core.KeeperReviewsDetails, error) {
	ret := _m.Called(ctx, keeperReview)

	if len(ret) == 0 {
		panic("no return value specified for UpdateReviewByID")
	}

	var r0 core.KeeperReviewsDetails
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, core.UpdateKeeperReviews) (core.KeeperReviewsDetails, error)); ok {
		return rf(ctx, keeperReview)
	}
	if rf, ok := ret.Get(0).(func(context.Context, core.UpdateKeeperReviews) core.KeeperReviewsDetails); ok {
		r0 = rf(ctx, keeperReview)
	} else {
		r0 = ret.Get(0).(core.KeeperReviewsDetails)
	}

	if rf, ok := ret.Get(1).(func(context.Context, core.UpdateKeeperReviews) error); ok {
		r1 = rf(ctx, keeperReview)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockKeeperReviewsService_UpdateReviewByID_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateReviewByID'
type MockKeeperReviewsService_UpdateReviewByID_Call struct {
	*mock.Call
}

// UpdateReviewByID is a helper method to define mock.On call
//   - ctx context.Context
//   - keeperReview core.UpdateKeeperReviews
func (_e *MockKeeperReviewsService_Expecter) UpdateReviewByID(ctx interface{}, keeperReview interface{}) *MockKeeperReviewsService_UpdateReviewByID_Call {
	return &MockKeeperReviewsService_UpdateReviewByID_Call{Call: _e.mock.On("UpdateReviewByID", ctx, keeperReview)}
}

func (_c *MockKeeperReviewsService_UpdateReviewByID_Call) Run(run func(ctx context.Context, keeperReview core.UpdateKeeperReviews)) *MockKeeperReviewsService_UpdateReviewByID_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(core.UpdateKeeperReviews))
	})
	return _c
}

func (_c *MockKeeperReviewsService_UpdateReviewByID_Call) Return(_a0 core.KeeperReviewsDetails, _a1 error) *MockKeeperReviewsService_UpdateReviewByID_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockKeeperReviewsService_UpdateReviewByID_Call) RunAndReturn(run func(context.Context, core.UpdateKeeperReviews) (core.KeeperReviewsDetails, error)) *MockKeeperReviewsService_UpdateReviewByID_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockKeeperReviewsService creates a new instance of MockKeeperReviewsService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockKeeperReviewsService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockKeeperReviewsService {
	mock := &MockKeeperReviewsService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
