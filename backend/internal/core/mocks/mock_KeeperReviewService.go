// Code generated by mockery v2.43.2. DO NOT EDIT.

package core

import (
	context "context"

	core "github.com/kotopesp/sos-kotopes/internal/core"
	mock "github.com/stretchr/testify/mock"
)

// MockKeeperReviewService is an autogenerated mock type for the KeeperReviewService type
type MockKeeperReviewService struct {
	mock.Mock
}

type MockKeeperReviewService_Expecter struct {
	mock *mock.Mock
}

func (_m *MockKeeperReviewService) EXPECT() *MockKeeperReviewService_Expecter {
	return &MockKeeperReviewService_Expecter{mock: &_m.Mock}
}

// CreateReview provides a mock function with given fields: ctx, review
func (_m *MockKeeperReviewService) CreateReview(ctx context.Context, review core.KeeperReview) (core.KeeperReview, error) {
	ret := _m.Called(ctx, review)

	if len(ret) == 0 {
		panic("no return value specified for CreateReview")
	}

	var r0 core.KeeperReview
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, core.KeeperReview) (core.KeeperReview, error)); ok {
		return rf(ctx, review)
	}
	if rf, ok := ret.Get(0).(func(context.Context, core.KeeperReview) core.KeeperReview); ok {
		r0 = rf(ctx, review)
	} else {
		r0 = ret.Get(0).(core.KeeperReview)
	}

	if rf, ok := ret.Get(1).(func(context.Context, core.KeeperReview) error); ok {
		r1 = rf(ctx, review)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockKeeperReviewService_CreateReview_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateReview'
type MockKeeperReviewService_CreateReview_Call struct {
	*mock.Call
}

// CreateReview is a helper method to define mock.On call
//   - ctx context.Context
//   - review core.KeeperReview
func (_e *MockKeeperReviewService_Expecter) CreateReview(ctx interface{}, review interface{}) *MockKeeperReviewService_CreateReview_Call {
	return &MockKeeperReviewService_CreateReview_Call{Call: _e.mock.On("CreateReview", ctx, review)}
}

func (_c *MockKeeperReviewService_CreateReview_Call) Run(run func(ctx context.Context, review core.KeeperReview)) *MockKeeperReviewService_CreateReview_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(core.KeeperReview))
	})
	return _c
}

func (_c *MockKeeperReviewService_CreateReview_Call) Return(data core.KeeperReview, err error) *MockKeeperReviewService_CreateReview_Call {
	_c.Call.Return(data, err)
	return _c
}

func (_c *MockKeeperReviewService_CreateReview_Call) RunAndReturn(run func(context.Context, core.KeeperReview) (core.KeeperReview, error)) *MockKeeperReviewService_CreateReview_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteReview provides a mock function with given fields: ctx, id, userID
func (_m *MockKeeperReviewService) DeleteReview(ctx context.Context, id int, userID int) error {
	ret := _m.Called(ctx, id, userID)

	if len(ret) == 0 {
		panic("no return value specified for DeleteReview")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, int, int) error); ok {
		r0 = rf(ctx, id, userID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockKeeperReviewService_DeleteReview_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteReview'
type MockKeeperReviewService_DeleteReview_Call struct {
	*mock.Call
}

// DeleteReview is a helper method to define mock.On call
//   - ctx context.Context
//   - id int
//   - userID int
func (_e *MockKeeperReviewService_Expecter) DeleteReview(ctx interface{}, id interface{}, userID interface{}) *MockKeeperReviewService_DeleteReview_Call {
	return &MockKeeperReviewService_DeleteReview_Call{Call: _e.mock.On("DeleteReview", ctx, id, userID)}
}

func (_c *MockKeeperReviewService_DeleteReview_Call) Run(run func(ctx context.Context, id int, userID int)) *MockKeeperReviewService_DeleteReview_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(int), args[2].(int))
	})
	return _c
}

func (_c *MockKeeperReviewService_DeleteReview_Call) Return(_a0 error) *MockKeeperReviewService_DeleteReview_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockKeeperReviewService_DeleteReview_Call) RunAndReturn(run func(context.Context, int, int) error) *MockKeeperReviewService_DeleteReview_Call {
	_c.Call.Return(run)
	return _c
}

// GetAllReviews provides a mock function with given fields: ctx, keeperID, params
func (_m *MockKeeperReviewService) GetAllReviews(ctx context.Context, keeperID int, params core.GetAllKeeperReviewsParams) ([]core.KeeperReview, error) {
	ret := _m.Called(ctx, keeperID, params)

	if len(ret) == 0 {
		panic("no return value specified for GetAllReviews")
	}

	var r0 []core.KeeperReview
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, int, core.GetAllKeeperReviewsParams) ([]core.KeeperReview, error)); ok {
		return rf(ctx, keeperID, params)
	}
	if rf, ok := ret.Get(0).(func(context.Context, int, core.GetAllKeeperReviewsParams) []core.KeeperReview); ok {
		r0 = rf(ctx, keeperID, params)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]core.KeeperReview)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, int, core.GetAllKeeperReviewsParams) error); ok {
		r1 = rf(ctx, keeperID, params)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockKeeperReviewService_GetAllReviews_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetAllReviews'
type MockKeeperReviewService_GetAllReviews_Call struct {
	*mock.Call
}

// GetAllReviews is a helper method to define mock.On call
//   - ctx context.Context
//   - keeperID int
//   - params core.GetAllKeeperReviewsParams
func (_e *MockKeeperReviewService_Expecter) GetAllReviews(ctx interface{}, keeperID interface{}, params interface{}) *MockKeeperReviewService_GetAllReviews_Call {
	return &MockKeeperReviewService_GetAllReviews_Call{Call: _e.mock.On("GetAllReviews", ctx, keeperID, params)}
}

func (_c *MockKeeperReviewService_GetAllReviews_Call) Run(run func(ctx context.Context, keeperID int, params core.GetAllKeeperReviewsParams)) *MockKeeperReviewService_GetAllReviews_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(int), args[2].(core.GetAllKeeperReviewsParams))
	})
	return _c
}

func (_c *MockKeeperReviewService_GetAllReviews_Call) Return(data []core.KeeperReview, err error) *MockKeeperReviewService_GetAllReviews_Call {
	_c.Call.Return(data, err)
	return _c
}

func (_c *MockKeeperReviewService_GetAllReviews_Call) RunAndReturn(run func(context.Context, int, core.GetAllKeeperReviewsParams) ([]core.KeeperReview, error)) *MockKeeperReviewService_GetAllReviews_Call {
	_c.Call.Return(run)
	return _c
}

// UpdateReview provides a mock function with given fields: ctx, id, userID, review
func (_m *MockKeeperReviewService) UpdateReview(ctx context.Context, id int, userID int, review core.KeeperReview) (core.KeeperReview, error) {
	ret := _m.Called(ctx, id, userID, review)

	if len(ret) == 0 {
		panic("no return value specified for UpdateReview")
	}

	var r0 core.KeeperReview
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, int, int, core.KeeperReview) (core.KeeperReview, error)); ok {
		return rf(ctx, id, userID, review)
	}
	if rf, ok := ret.Get(0).(func(context.Context, int, int, core.KeeperReview) core.KeeperReview); ok {
		r0 = rf(ctx, id, userID, review)
	} else {
		r0 = ret.Get(0).(core.KeeperReview)
	}

	if rf, ok := ret.Get(1).(func(context.Context, int, int, core.KeeperReview) error); ok {
		r1 = rf(ctx, id, userID, review)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockKeeperReviewService_UpdateReview_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateReview'
type MockKeeperReviewService_UpdateReview_Call struct {
	*mock.Call
}

// UpdateReview is a helper method to define mock.On call
//   - ctx context.Context
//   - id int
//   - userID int
//   - review core.KeeperReview
func (_e *MockKeeperReviewService_Expecter) UpdateReview(ctx interface{}, id interface{}, userID interface{}, review interface{}) *MockKeeperReviewService_UpdateReview_Call {
	return &MockKeeperReviewService_UpdateReview_Call{Call: _e.mock.On("UpdateReview", ctx, id, userID, review)}
}

func (_c *MockKeeperReviewService_UpdateReview_Call) Run(run func(ctx context.Context, id int, userID int, review core.KeeperReview)) *MockKeeperReviewService_UpdateReview_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(int), args[2].(int), args[3].(core.KeeperReview))
	})
	return _c
}

func (_c *MockKeeperReviewService_UpdateReview_Call) Return(data core.KeeperReview, err error) *MockKeeperReviewService_UpdateReview_Call {
	_c.Call.Return(data, err)
	return _c
}

func (_c *MockKeeperReviewService_UpdateReview_Call) RunAndReturn(run func(context.Context, int, int, core.KeeperReview) (core.KeeperReview, error)) *MockKeeperReviewService_UpdateReview_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockKeeperReviewService creates a new instance of MockKeeperReviewService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockKeeperReviewService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockKeeperReviewService {
	mock := &MockKeeperReviewService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
