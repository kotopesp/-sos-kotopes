version: "3.9"

services:
  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    container_name: backend
    restart: always
    ports:
      - "8080:8080"
    networks:
      - sos-kotopes
    depends_on:
      postgres:
        condition: service_healthy
    command: "./backend -db_url postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB} -log_level ${LOG_LEVEL} -port ${PORT} -vk_client_id ${VK_CLIENT_ID} -vk_client_secret ${VK_CLIENT_SECRET}"
  postgres:
    image: postgres:16.3
    container_name: postgres
    restart: always
    #ports: \\uncomment for a debug
    #  - "15432:5432"
    env_file:
      - .env
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
    networks:
      - sos-kotopes
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 20s
networks:
  sos-kotopes:
    driver: bridge
volumes:
  postgres-data: